"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 2.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@_=o9jle^i#@y7hx7p8&izd7ym*saio36#$l1lzs)nuysk!v+&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['mysite.com']

SECURE_SSL_REDIRECT = True


# Application definition

INSTALLED_APPS = [
    'account',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',                         # admin must come after account to display custom login/logout page
    'social_django',
    'sslserver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',            # handles current session across requests
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # associates users with sessions
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    # 'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# specify custom authentication backends (and default) order matters, first one to pass takes
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'account.authentication.EmailAuthBackend',          # enable users to authenticate with email or username
    'social_core.backends.facebook.FacebookOAuth2',     # enable users to authenticate with Facebook
    'social_core.backends.twitter.TwitterOAuth',        # enable users to authenticate with Twitter
    'social_core.backends.google.GoogleOAuth2',         # enable users to authenticate with Google
)

# allow media upload

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


# social auth keys
SOCIAL_AUTH_FACEBOOK_KEY = '425318267937331'
SOCIAL_AUTH_FACEBOOK_SECRET = '0e3fb99bf85aa56a1c18a3b49e32cc26'

SOCIAL_AUTH_TWITTER_KEY = 'pHZmhvhN4osPSyM8liwwiecYS'
SOCIAL_AUTH_TWITTER_SECRET = 'eSmxYmJpRO7FYu9z0XAGiYECD0058G2F0xXm9zk3DfMek5ADVh'

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '607097118439-4805bnktu7sir2g4jln43h72q3bjurmv.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'FA1mrNi5jm-FV18ipAKkxdKV'

# tells django where to redirect after authentication
from django.urls import reverse_lazy  # reverse URLs

LOGIN_REDIRECT_URL = reverse_lazy('account:dashboard')
# LOGIN_URL = reverse_lazy('account:login')
LOGOUT_URL = reverse_lazy('account:logout')

# set up external email 'server' for hosting and sending emails

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'lahut13@gmail.com'
EMAIL_HOST_PASSWORD = 'Twobro9078'
EMAIL_PORT = 587